name: Compile & Publish
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'     
        required: true
      changelog:
        description: 'Changelog'     
        required: true

  push:
    branches:
      - syntax-rewrite
  pull_request:
    branches:
      - syntax-rewrite

jobs:
  compile:
  
    runs-on: ${{ matrix.system }}
    strategy:
      matrix:
        system: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - name: Switch Branch
      uses: actions/checkout@v2
      with:
        ref: 'syntax-rewrite'

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.5
        
    - name: Download dependencies
      run: go mod download

    - name: Publish release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: ${{ github.event.inputs.version }}
        draft: false
        prerelease: false
      
    - name: Build and Publish - Windows
      if: ${{ matrix.system == 'windows-latest' }}
      run: go build -ldflags "-w" -v dishook | ls
    - name: Publish - Windows
      if: ${{ matrix.system == 'windows-latest' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dishook.exe
        asset_name: dishook.exe
        asset_content_type: application/tar+gzip


    - name: Build - macOS
      if: ${{ matrix.system == 'macOS-latest' }}
      run: go build -ldflags "-w" -v dishook-macos | ls
    - name: Publish - macOS
      if: ${{ matrix.system == 'macOS-latest' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dishook-macos
        asset_name: dishook-macos
        asset_content_type: application/tar+gzip
          
          
    - name: Build - Linux
      if: ${{ matrix.system == 'ubuntu-latest' }}
      run: go build -ldflags "-w" -v dishook | ls
    - name: Publish - Linux
      if: ${{ matrix.system == 'macOS-latest' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dishook
        asset_name: dishook
        asset_content_type: application/tar+gzip
    
    
