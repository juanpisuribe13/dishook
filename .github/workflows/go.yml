name: Compile

on:
  workflow_dispatch:
  push:
    branches:
      - syntax-rewrite
  pull_request:
    branches:
      - syntax-rewrite

jobs:

  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Read info
        id: tags
        shell: bash
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
          echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}

      - name: Publish release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tags.outputs.tag }}
          release_name: ${{ steps.tags.outputs.tag }}
          draft: false
          prerelease: false
      
  compile:
    runs-on: ${{ matrix.system }}
    strategy:
      matrix:
        system: [ubuntu-latest, windows-latest, macOS-latest]
  
    steps:
    - name: Switch Branch
      uses: actions/checkout@v2
      with:
        ref: 'syntax-rewrite'

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.5
        
    - name: Download dependencies
      run: go mod download
      
    - name: Build and Publish - Windows
      if: ${{ matrix.system == 'windows-latest' }}
      run: go build -ldflags "-w" -v dishook | ls
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ jobs.create_release.steps.create_release.outputs.upload_url }}
        asset_path: ./dishook.exe
        asset_name: dishook.exe
        asset_content_type: application/tar+gzip

    - name: Build and Publish - macOS
      if: ${{ matrix.system == 'macOS-latest' }}
      run: go build -ldflags "-w" -v dishook-macos | ls
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ jobs.create_release.steps.create_release.outputs.upload_url }}
        asset_path: ./dishook-macos
        asset_name: dishook-macos
        asset_content_type: application/tar+gzip
          
    - name: Build and Publish - Linux
      if: ${{ matrix.system == 'ubuntu-latest' }}
      run: go build -ldflags "-w" -v dishook | ls
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ jobs.create_release.steps.create_release.outputs.upload_url }}
        asset_path: ./dishook
        asset_name: dishook
        asset_content_type: application/tar+gzip
    
    
