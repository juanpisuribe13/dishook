name: Compile & Ship

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'     
        required: true
      pre_release:
        type: boolean
        description: Nightly Build

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
    - name: Switch Branch
      uses: actions/checkout@v2
      with:
        ref: 'master'

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.5
    - name: Download dependencies
      run: go mod download
      
    - name: Grab CHANGELOG
      env:
        DATE_BUILD: ${{ github.event.inputs.version }}
      if: ${{ github.event.inputs.pre_release == false }}
      run: sed '1,/## $DATE_BUILD/d;/'---'/Q' CHANGELOG >> release_changelog
      if: ${{ github.event.inputs.pre_release == true }}
      run: echo nightly_build_$DATE_BUILD >> release_changelog
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: ${{ github.event.inputs.version }}
        body_path: ./release_changelog
        draft: false
        prerelease: ${{ github.event.inputs.pre_release }}
        
      
    - name: Build - Windows x64 Binary
      env:
        GOOS: windows
        GOARCH: amd64
      run: go build -ldflags "-w" -v -o ./bin/dishook.exe
      
      
    - name: Build - macOS x64 Binary
      env:
        GOOS: darwin
        GOARCH: amd64
      run: go build -ldflags "-w" -v -o ./bin/dishook_Darwin_x86_64
  
    - name: Build - Linux x64 Binary
      env:
        GOOS: linux
        GOARCH: amd64
      run: go build -ldflags "-w" -v -o ./bin/dishook_Linux_x86_64
      
    - name: Build - Linux x86 Binary
      env:
        GOOS: linux
        GOARCH: 386
      run: go build -ldflags "-w" -v -o ./bin/dishook_Linux_i386
      
    - name: Build - Linux ARM64 Binary
      env:
        GOOS: linux
        GOARCH: arm64
      run: go build -ldflags "-w" -v -o ./bin/dishook_Linux_arm64
      
    - name: Build - Linux ARM Binary
      env:
        GOOS: linux
        GOARCH: arm
      run: go build -ldflags "-w" -v -o ./bin/dishook_Linux_arm
      
  
    - name: Upload Windows amd64
      id: upload-win_amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/dishook.exe
        asset_name: dishook.exe
        asset_content_type: application/tar+gzip
        
    - name: Upload Darwin amd64
      id: upload-darwin_amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/dishook_Darwin_x86_64
        asset_name: dishook_Darwin_x86_64
        asset_content_type: application/tar+gzip
        
    - name: Upload Linux amd64
      id: upload-linux_amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/dishook_Linux_x86_64
        asset_name: dishook_Linux_x86_64
        asset_content_type: application/tar+gzip

    - name: Upload Linux i386
      id: upload-linux_i386
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/dishook_Linux_i386
        asset_name: dishook_Linux_i386
        asset_content_type: application/tar+gzip
  
    - name: Upload Linux ARM64
      id: upload-linux_ARM64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/dishook_Linux_arm64
        asset_name: dishook_arm64
        asset_content_type: application/tar+gzip
        
    - name: Upload Linux ARM
      id: upload-linux_Linux_ARM
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/dishook_arm
        asset_name: dishook_arm
        asset_content_type: application/tar+gzip
